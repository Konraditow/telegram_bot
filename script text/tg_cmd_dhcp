:local send [:parse [/system script get tg_sendMessage source]]
:local tolower [:parse [/system script get func_lowercase source]]
:local param1 [:pick $params 0 [:find $params " "]]
:local param2 [:pick $params ([:find $params " "]+1) [:len $params]]
:local param3 [:pick [:pick $params ([:find $params " "]+1) [:len $params]] ([:find [:pick $params ([:find $params " "]+1) [:len $params]] " "]+1) [:len [:pick $params ([:find $params " "]+1) [:len $params]]]]
:if ([:len [:find $param2 " "]]>0) do={
	:set param2 [:pick [:pick $params ([:find $params " "]+1) [:len $params]] 0 [:find [:pick $params ([:find $params " "]+1) [:len $params]] " "]]
} else={
	:set param3 ""
}

:local paramsLower [$tolower $params]
:local param1Lower [$tolower $param1]
:local param2Lower [$tolower $param2]
:local param3Lower [$tolower $param3]

:local getVendor false
:if ($paramsLower = "lease") do={
	local GetMacVendor do={
		:do {
			return ([/tool fetch mode=https http-method=get url=("https://api.macvendors.com/".[:pick [:tostr $1] 0 8 ]) as-value output=user ]->"data")
		} on-error={
			return "proveedor desconocido"
		}
	}
	:local text
	:local number (0)
	:set text ("Router ID: $[/system identity get value-name=name]")
	:foreach lease in=[/ip dhcp-server lease find] do={
		:set number ($number + 1)
		set text ($text."====== \F0\9F\97\82 DHCP LEASE ($number) \F0\9F\97\82 ======%0A")
		:local addr [/ip dhcp-server lease get value-name=address $lease]
		:set text ($text."IP: $addr%0A")
		:local mac [/ip dhcp-server lease get value-name=mac-address $lease]
		:set text ($text."MAC: $mac%0A")
		:if ($getVendor = "true") do={
			:local macvendor [$GetMacVendor $mac]
			:set text ($text."Proveedor de MAC: $macvendor%0A")	
		}
		:local host [/ip dhcp-server lease get value-name=host-name $lease]
		:if ([:typeof $host] = "Nulo") do={set host ("Nombre de host desconocido")}
		:set text ($text."Hostname: $$host%0A")
		:local lastseen [/ip dhcp-server lease get value-name=last-seen $lease]
		:set text ($text."Uptime: $lastseen%0A")
		:local server [/ip dhcp-server lease get value-name=server $lease]
		:set text ($text."Server: $server%0A")
	}
	:set text ($text."=========== INFORME FINAL ===========%0A")
	$send chat=$chatid text=("$text") mode="Markdown"
}
:if ($param1Lower = "client" && $param2Lower = "release") do={
	:if ([:len $param3] > 0) do={
		:if ([:len [/ip dhcp-client/ find where interface=$param3]] > 0) do={
			$send chat=$chatid text="El cliente DHCP se puede lanzar en 5 detalles" mode="Markdown";
			:delay 5s
			/ip dhcp-client release $param3
		} else={
			$send chat=$chatid text=("Pero el cliente DHCP con la interfaz $param3 no se puede editar") mode="Markdown";
		}
	} else={
		$send chat=$chatid text="Ingrese la interfaz para la cual desea liberar el cliente DHCP" mode="Markdown";
	}
}
